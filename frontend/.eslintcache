[{"/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/index.js":"1","/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/App.js":"2","/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/Navbar.js":"3","/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/Builder.js":"4","/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/PageBackground.js":"5","/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/NavbarBackground.js":"6","/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/NavbarLinks.js":"7","/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/NavbarWidth.js":"8","/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/NavbarHeight.js":"9","/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/ScrollPage.js":"10","/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/NavbarPosition.js":"11","/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/CTALink.js":"12","/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/LinksOnHover.js":"13","/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/NavbarBorder.js":"14"},{"size":224,"mtime":1608970504994,"results":"15","hashOfConfig":"16"},{"size":9096,"mtime":1609273809880,"results":"17","hashOfConfig":"16"},{"size":4165,"mtime":1609274224921,"results":"18","hashOfConfig":"16"},{"size":11837,"mtime":1609273716906,"results":"19","hashOfConfig":"16"},{"size":3608,"mtime":1609150300349,"results":"20","hashOfConfig":"16"},{"size":720,"mtime":1608970686712,"results":"21","hashOfConfig":"16"},{"size":2681,"mtime":1609216499636,"results":"22","hashOfConfig":"16"},{"size":1583,"mtime":1609215974741,"results":"23","hashOfConfig":"16"},{"size":687,"mtime":1609131368697,"results":"24","hashOfConfig":"16"},{"size":263,"mtime":1609132000931,"results":"25","hashOfConfig":"16"},{"size":1452,"mtime":1609136689949,"results":"26","hashOfConfig":"16"},{"size":5927,"mtime":1609235230879,"results":"27","hashOfConfig":"16"},{"size":1886,"mtime":1609241370940,"results":"28","hashOfConfig":"16"},{"size":2989,"mtime":1609273699621,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"l4hbzt",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/index.js",[],["60","61"],"/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/App.js",[],"/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/Navbar.js",[],"/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/Builder.js",[],"/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/PageBackground.js",[],"/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/NavbarBackground.js",[],"/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/NavbarLinks.js",[],"/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/NavbarWidth.js",[],"/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/NavbarHeight.js",[],"/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/ScrollPage.js",[],"/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/NavbarPosition.js",[],"/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/CTALink.js",["62"],"import { useState, useEffect } from 'react';\nimport { useCheckboxState, Checkbox, Switch } from 'pretty-checkbox-react';\nimport '@djthoms/pretty-checkbox';\nimport { ChromePicker } from 'react-color';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nconst CTALink = ({\n  saveCTABackgroundColor,\n  setCTASameAsLinkColor,\n  saveCTATextColor,\n  saveFontWeight,\n  saveBorderOnOrOff,\n  saveCTABorderColor,\n  saveCTABorderSize,\n  saveCTAWidth,\n  saveCTABorderRadius,\n}) => {\n  const [CTABackgroundColor, setCTABackgroundColor] = useState({ r: 255, g: 0, b: 0, a: 0 });\n  const [CTATextColor, setCTATextColor] = useState('#ffffff');\n  const [fontWeight, setFontWeight] = useState(400);\n  const [CTABorderColor, setCTABorderColor] = useState('#000000');\n  const [CTABorderSize, setCTABorderSize] = useState(1);\n  const [CTAWidth, setCTAWidth] = useState(1);\n  const [CTABorderRadius, setCTABorderRadius] = useState(0);\n  const checkbox = useCheckboxState();\n  const switchState = useCheckboxState();\n\n  useEffect(() => {\n    checkbox.setState(true);\n  }, []);\n\n  useEffect(() => {\n    saveCTABackgroundColor(CTABackgroundColor);\n    setCTASameAsLinkColor(checkbox.state);\n    saveCTATextColor(CTATextColor);\n    saveFontWeight(fontWeight);\n    saveBorderOnOrOff(switchState.state);\n    saveCTABorderColor(CTABorderColor);\n    saveCTABorderSize(CTABorderSize);\n    saveCTAWidth(CTAWidth);\n    saveCTABorderRadius(CTABorderRadius);\n  }, [\n    CTABackgroundColor,\n    saveCTABackgroundColor,\n    setCTASameAsLinkColor,\n    checkbox,\n    CTATextColor,\n    saveCTATextColor,\n    fontWeight,\n    saveFontWeight,\n    switchState,\n    saveBorderOnOrOff,\n    CTABorderColor,\n    saveCTABorderColor,\n    CTABorderSize,\n    saveCTABorderSize,\n    CTAWidth,\n    saveCTAWidth,\n    CTABorderRadius,\n    saveCTABorderRadius,\n  ]);\n\n  const handleCTAChange = (e) => {\n    setCTABackgroundColor(e.rgb);\n  };\n\n  const handleCTATextColorChange = (e) => {\n    setCTATextColor(e.hex);\n  };\n\n  const handleFontWeight = (e) => {\n    setFontWeight(e);\n  };\n\n  const handleCTABorderColorChange = (e) => {\n    setCTABorderColor(e.hex);\n  };\n\n  const handleCTABorderSize = (e) => {\n    setCTABorderSize(e);\n  };\n\n  const handleCTAWidth = (e) => {\n    setCTAWidth(e);\n  };\n\n  const handleCTABorderRadius = (e) => {\n    setCTABorderRadius(e);\n  };\n\n  return (\n    <div>\n      <h2>Choose a background color for your CTA link.</h2>\n      <br />\n      <hr />\n      <br />\n      <ChromePicker onChange={handleCTAChange} color={CTABackgroundColor} />\n      <br />\n      <br />\n      <br />\n      <hr />\n      <br />\n      <h2>Choose a color for your CTA link.</h2>\n      <br />\n      <hr />\n      <br />\n      <Checkbox shape='curve' bigger variant='fill' color='primary' animation={'jelly'} {...checkbox}>\n        Same as other links: {checkbox.state + ''}\n      </Checkbox>\n      <br />\n      <br />\n      <hr />\n      <br />\n      {checkbox.state === false && (\n        <ChromePicker disableAlpha onChange={handleCTATextColorChange} color={CTATextColor} />\n      )}\n      {checkbox.state === false && <br />}\n      {checkbox.state === false && <br />}\n      {checkbox.state === false && <br />}\n      {checkbox.state === false && <hr />}\n      {checkbox.state === false && <br />}\n      <h2>Choose a font weight for your CTA link.</h2>\n      <br />\n      <hr />\n      <br />\n      <label>Font Weight: {fontWeight}</label>\n      <br />\n      <br />\n      <Slider min={400} max={700} step={100} dots value={fontWeight} onChange={handleFontWeight} />\n      <br />\n      <hr />\n      <br />\n      <Switch shape='slim' color='primary' {...switchState}>\n        CTA Link Border: {switchState.state ? 'On' : 'Off'}\n      </Switch>\n      <br />\n      <br />\n      {switchState.state && <hr />}\n      {switchState.state && <br />}\n      {switchState.state && <h2>Choose a border color for your CTA link.</h2>}\n      {switchState.state && <br />}\n      {switchState.state && <hr />}\n      {switchState.state && <br />}\n      {switchState.state && <ChromePicker disableAlpha onChange={handleCTABorderColorChange} color={CTABorderColor} />}\n      {switchState.state && <br />}\n      {switchState.state && <br />}\n      {switchState.state && <hr />}\n      {switchState.state && <br />}\n      {switchState.state && <h2>Choose the size of your CTA link border.</h2>}\n      {switchState.state && <br />}\n      {switchState.state && <hr />}\n      {switchState.state && <br />}\n      {switchState.state && <label>Border Size: {CTABorderSize}</label>}\n      {switchState.state && <br />}\n      {switchState.state && <br />}\n      {switchState.state && (\n        <Slider min={1} max={6} step={1} dots value={CTABorderSize} onChange={handleCTABorderSize} />\n      )}\n      {switchState.state && <br />}\n      {switchState.state && <hr />}\n      {switchState.state && <br />}\n      {switchState.state && <h2>Choose the width of your CTA link.</h2>}\n      {switchState.state && <br />}\n      {switchState.state && <hr />}\n      {switchState.state && <br />}\n      {switchState.state && <label>CTA Width: {CTAWidth}</label>}\n      {switchState.state && <br />}\n      {switchState.state && <br />}\n      {switchState.state && <Slider min={1} max={4} step={1} dots value={CTAWidth} onChange={handleCTAWidth} />}\n      {switchState.state && <br />}\n      {switchState.state && <hr />}\n      {switchState.state && <br />}\n      {switchState.state && <h2>Choose the radius of your border.</h2>}\n      {switchState.state && <br />}\n      {switchState.state && <hr />}\n      {switchState.state && <br />}\n      {switchState.state && <label>Border Radius: {CTABorderRadius}px</label>}\n      {switchState.state && <br />}\n      {switchState.state && <br />}\n      {switchState.state && (\n        <Slider min={0} max={30} step={1} value={CTABorderRadius} onChange={handleCTABorderRadius} />\n      )}\n      {switchState.state && <br />}\n    </div>\n  );\n};\n\nexport default CTALink;\n","/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/LinksOnHover.js",[],"/Users/steveanthony999/Desktop/Dev/projects/NavBam/React/03/navbam-react-win/frontend/src/components/NavbarBorder.js",["63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":31,"column":6,"nodeType":"70","endLine":31,"endColumn":8,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":36,"nodeType":"74","messageId":"75","endLine":2,"endColumn":44},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkbox'. Either include it or remove the dependency array.","ArrayExpression",["78"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [checkbox]",{"range":"81","text":"82"},[1067,1069],"[checkbox]"]